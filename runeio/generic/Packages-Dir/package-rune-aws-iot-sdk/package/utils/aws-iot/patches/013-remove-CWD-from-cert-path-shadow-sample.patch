--- a/sample_apps/shadow_sample/shadow_sample.c	2016-03-03 06:47:45.556794117 -0800
+++ b/sample_apps/shadow_sample/shadow_sample.c	2016-03-03 06:49:01.946148134 -0800
@@ -91,7 +91,7 @@
 	}
 }
 
-char certDirectory[PATH_MAX + 1] = "../../certs";
+char certDirectory[PATH_MAX + 1] = "/usr/certs";
 char HostAddress[255] = AWS_IOT_MQTT_HOST;
 uint32_t port = AWS_IOT_MQTT_PORT;
 uint8_t numPubs = 5;
@@ -175,7 +175,6 @@
 	char rootCA[PATH_MAX + 1];
 	char clientCRT[PATH_MAX + 1];
 	char clientKey[PATH_MAX + 1];
-	char CurrentWD[PATH_MAX + 1];
 	char cafileName[] = AWS_IOT_ROOT_CA_FILENAME;
 	char clientCRTName[] = AWS_IOT_CERTIFICATE_FILENAME;
 	char clientKeyName[] = AWS_IOT_PRIVATE_KEY_FILENAME;
@@ -184,10 +183,9 @@
 
 	INFO("\nAWS IoT SDK Version(dev) %d.%d.%d-%s\n", VERSION_MAJOR, VERSION_MINOR, VERSION_PATCH, VERSION_TAG);
 
-	getcwd(CurrentWD, sizeof(CurrentWD));
-	sprintf(rootCA, "%s/%s/%s", CurrentWD, certDirectory, cafileName);
-	sprintf(clientCRT, "%s/%s/%s", CurrentWD, certDirectory, clientCRTName);
-	sprintf(clientKey, "%s/%s/%s", CurrentWD, certDirectory, clientKeyName);
+	sprintf(rootCA, "%s/%s", certDirectory, cafileName);
+	sprintf(clientCRT, "%s/%s", certDirectory, clientCRTName);
+	sprintf(clientKey, "%s/%s", certDirectory, clientKeyName);
 
 	DEBUG("Using rootCA %s", rootCA);
 	DEBUG("Using clientCRT %s", clientCRT);
